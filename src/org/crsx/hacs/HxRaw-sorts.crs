// HxRaw-sorts.crs: SORTS OF RAW HACS (.hx) FORMAT.
//
HxRawSorts[(

// STRUCTURE.

{$String : $StringEntrySort}
HxModule ::=(
  %rawHxModule⟪ %EmbeddedModule«HxEmbeddedModule» ⟫;
);

{$String : $StringEntrySort}
HxEmbeddedModule ::=(
  %rawHxEmbeddedModule⟪ module %ModuleName«$String» { %Declarations«$List[HxDeclaration]» } ⟫;
);

{$String : $StringEntrySort}
HxDeclaration ::=(
 %rawHxDeclaration⟪ %EmbeddedModule«HxEmbeddedModule» ; ⟫;
 %rawHxDeclaration⟪ import %ModuleName«$String» ( %SortNames«$List[$String]» ) ; ⟫;
 %rawHxDeclaration⟪ space %RegExp«$List[HxRegExpChoice]» ; ⟫;
 %rawHxDeclaration⟪ token %SortName«$String» | %RegExp«$List[HxRegExpChoice]» ; ⟫;
 %rawHxDeclaration⟪ fragment %FragmentName«$String» | %RegExp«$List[HxRegExpChoice]» ; ⟫;
 %rawHxDeclaration⟪ attribute %AttributeKind«HxAttributeKind» %AttributeName«$String» %AttributeForm«HxAttributeForm» %AttributeOptions«$List[HxAttributeOption]» ; ⟫;
 %rawHxDeclaration⟪ sort %SortName«$String» %Repeat«HxRepeat» %SortAbstraction«HxSortAbstraction» ; ⟫;
 %rawHxDeclaration⟪ %SortAlternatives«$List[HxSortAlternative]» ; ⟫;
 %rawHxDeclaration⟪ rule %Rule«HxRule» ; ⟫;
 %rawHxDeclaration⟪ { %Declarations«$List[HxDeclaration]» } ⟫;
);

//// SYNTAX.

{$String : $StringEntrySort}
HxRegExpChoice ::=(
 %rawHxRegExpChoice⟪ nested %RegExpSimple«HxRegExpSimple» %RegExpSimple«HxRegExpSimple» ⟫;
 %rawHxRegExpChoice⟪ %RegExpUnits«$List[HxRegExpUnit]» ⟫;
);

{$String : $StringEntrySort}
HxRegExpUnit ::= (
 %rawHxRegExpUnit⟪ %RegExpSimple«HxRegExpSimple» %Repeat«HxRepeat» ⟫;
);

{$String : $StringEntrySort}
HxRepeat ::=(
 %rawHxRepeat⟪ ⟫;
 %rawHxRepeat⟪ ? ⟫;
 %rawHxRepeat⟪ * ⟫;
 %rawHxRepeat⟪ + ⟫;
 %rawHxRepeat⟪ + _ %RegExpLeaf«HxRegExpSimple» ⟫;
);

{$String : $StringEntrySort}
HxRegExpSimple ::=(
 %rawHxRegExpSimple⟪ %String«$String» ⟫;
 %rawHxRegExpSimple⟪ %Word«$String» ⟫;
 %rawHxRegExpSimple⟪ %FragmentRef«$String» ⟫;
 %rawHxRegExpSimple⟪ %RegExpClass«HxRegExpClass» ⟫;
 %rawHxRegExpSimple⟪ . ⟫;
 %rawHxRegExpSimple⟪ ( %RegExp«$List[HxRegExpChoice]» ) ⟫;
);

{$String : $StringEntrySort}
HxRegExpClass ::=(
 Hx-RegExpClassNot[HxRegExpClass];
 Hx-RegExpClassChar[$String, HxRegExpClass];
 Hx-RegExpClassRange[$String, $String, HxRegExpClass];
 Hx-RegExpClassDone;
);

//// SORTS.

{$String : $StringEntrySort}
HxSortAbstraction ::=(
 %rawHxSortAbstraction⟪ a %SortAbstraction« {a:HxSortParam} HxSortAbstraction »  ⟫;
 %rawHxSortAbstraction⟪ %SortAlternatives«$List[HxSortAlternative]»  ⟫;
);

{$String : $StringEntrySort}
HxSortAlternative ::=(
 %rawHxSortAlternative⟪ | data %Form«HxForm» %Tagging« $List[$String] » ⟫;
 %rawHxSortAlternative⟪ | scheme %Form«HxForm» ⟫;
 %rawHxSortAlternative⟪ | ↑ %AttributeName«$String» ⟫;
 %rawHxSortAlternative⟪ | symbol %Form«HxForm» ⟫;
 %rawHxSortAlternative⟪ | static symbol %Form«HxForm» ⟫;
 %rawHxSortAlternative⟪ | sugar %Form«HxForm» → %Term«HxTerm» ⟫;
);

{$String : $StringEntrySort}
HxForm ::=(
 Hx-FormParsedSorted[$String<!--SortName-->, HxParsedForm, $Numeric<!--Prec-->, $List[HxInheritedRef]];
 Hx-FormParsed[HxParsedForm, $Numeric<!--Prec-->, $List[HxInheritedRef]];
 Hx-FormConstruction[$String<!--Constructor-->, $List[HxScopeSort], $List[HxInheritedRef]];
);

{$String : $StringEntrySort}
HxScopeSort ::=(
 %rawHxScopeSort⟪ %Sort«HxSort» %Repeat«HxRepeat» [ %SubstituteSorts«$List[HxSubstituteSort]» ] ⟫;
 %rawHxScopeSort⟪ [ %Variable«$String» : %Sort«HxSort» ] ⟫;
 %rawHxBindersScopeSort⟪ [ %Variable«$String» : %Sort«HxSort» ] %BindersScopeSort« HxScopeSort » ⟫;
);

{$String : $StringEntrySort}
HxSubstituteSort ::=(
 %rawHxSubstituteSort⟪ %Variable«$String» : %Sort«HxSort» ⟫;
 %rawHxSubstituteSort⟪ %Variable«$String» ⟫;
 );

{$String : $StringEntrySort}
HxSort ::=(
 %rawHxSort⟪ %SimpleSort«HxSort» %SimpleSorts«$List[HxSort]» ⟫;
 %rawHxSimpleSort⟪ %SortName«$String» %MetaVariables«$List[$String]» ⟫;
 Hx-SortParam[HxSort];
);

{$String : $StringEntrySort}
HxParsedForm ::=(
 Hx-ParsedFormWord[$String, HxParsedForm];
 Hx-ParsedFormTerm[HxScopeSortPrecRepeat, HxParsedForm];
 Hx-ParsedFormSpace[$String, HxParsedForm];
 Hx-ParsedFormDone;
);

{$String : $StringEntrySort}
HxScopeSortPrecRepeat ::=(
  %rawHxScopeSortPrecRepeat⟪ %ScopeSort«HxScopeSort» %FormPrec«$Numeric» %Repeat«HxRepeat» ⟫; 
);

{$String : $StringEntrySort}
HxAttributeKind ::=(
 %rawHxAttributeKind⟪ ↑ ⟫;
 %rawHxAttributeKind⟪ ↓ ⟫;
);

{$String : $StringEntrySort}
HxAttributeForm ::=(
 %rawHxAttributeForm⟪ ( %Sort«HxSort» ) ⟫;
 %rawHxAttributeForm⟪ { %Sort«HxSort» } ⟫;
 %rawHxAttributeForm⟪ { %Sort«HxSort» : %Sort«HxSort» } ⟫;
);

{$String : $StringEntrySort}
HxAttributeOption ::=(
 %rawHxAttributeOption⟪ %Variable«$String» %Constructor«$String» ⟫;
);

{$String : $StringEntrySort}
HxInheritedRef ::=(
 %rawHxInheritedRef⟪ ↓ %AttributeName«$String» ⟫;
);

//// RULES.

{$String : $StringEntrySort}
HxRule ::=(
 %rawHxRule⟪ %Priority«HxPriority» [ %Options«$List[HxOption]» ] %NotVariableTerm«HxTerm» → %Term«HxTerm» ⟫;
);

{$String : $StringEntrySort}
HxPriority ::=(
 %rawHxPriority⟪ priority ⟫;
 %rawHxPriority⟪ default ⟫;
 %rawHxPriority⟪ ⟫;
);

{$String : $StringEntrySort}
HxOption ::=(
 %rawHxOption⟪ %Constructor«$String» [ %Options«$List[HxOption]» ] %Attributes«$List[HxAttribute]» ⟫;
 %rawHxOption⟪ %Literal«$String» %Attributes«$List[HxAttribute]» ⟫;
);

//// TERMS.

{$String : $StringEntrySort}
HxTerm ::=(

 %rawHxTerm⟪ %Constructor«$String» ( %Scopes«$List[HxScope]» ) %Attributes«$List[HxAttribute]» ⟫;
 %rawHxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %Constructor«$String» ( %Scopes«$List[HxScope]» ) %Attributes«$List[HxAttribute]» ⟫;
 %rawHxTerm⟪ %Literal«$String» %Attributes«$List[HxAttribute]» ⟫;
 %rawHxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %Literal«$String» %Attributes«$List[HxAttribute]» ⟫;

 %rawHxTerm⟪ %Variable«$String» %Attributes«$List[HxAttribute]» ⟫;
 %rawHxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %Variable«$String» %Attributes«$List[HxAttribute]» ⟫;

 %rawHxTerm⟪ %MetaVariable«$String» [ %Terms«$List[HxTerm]» ] %Attributes«$List[HxAttribute]» ⟫;
 %rawHxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %MetaVariable«$String» [ %Terms«$List[HxTerm]» ] %Attributes«$List[HxAttribute]» ⟫;
 
 Hx-Unparsed[$String, $List[HxAttribute]] ;
 Hx-UnparsedSorted[$String, HxRepeat, $String, $List[HxAttribute]];

 Hx-Special[$String, Text]; //TODO: parameters in text
 Hx-OMITTED;

);

{$String : $StringEntrySort}
HxScope ::=(
 %rawHxScope⟪ [ %VariableList«$List[$String]» ] %Term«HxTerm» ⟫;
);

{$String : $StringEntrySort}
HxAttribute ::=(
 %rawHxAttribute⟪ %AttributeKind«HxAttributeKind» %AttributeName«$String» %AttributeValue«HxAttributeValue» ⟫;
);

{$String : $StringEntrySort}
HxAttributeValue ::=(
 %rawHxAttributeValue⟪ ( %Term«HxTerm» ) ⟫;
 %rawHxAttributeValue⟪ { %Term«HxTerm» } ⟫;
 %rawHxAttributeValue⟪ { %Term«HxTerm» : %Term«HxTerm» } ⟫;
 %rawHxAttributeValue⟪ { ¬ %Term«HxTerm» } ⟫;
);

)]
