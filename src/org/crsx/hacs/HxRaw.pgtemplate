//// HxRaw.pg: GRAMMAR FOR .hx RAW HACS FILES.
//// Copyright © 2012,2014 Kristoffer H. Rose <krisrose@rcsx.org>

class org.crsx.hacs.HxRaw :
%%%HXNONTERMINALS%%%
 <HxTopTerm>, <HxTopPattern>, <HxAttributes>,
 <HxTerms>, <HxTerm>, <HxVariables>, <HxAttribute>, <HxAttributeValue>, <HxScopes>, <HxScope>

prefix "raw"

declarations
%{
static String hx(String s) {return "RawHx"+s;} // prefix for constructors
%%%HXDECLARATIONS%%%
%}


//// HACS-INTERNAL META RAW SYNTAX.

// Guillemets ("French quotes") used for embedded  CRSX terms (for sort hacks???).
<HxEmbedded> (*) ::= HX_EMBEDDED$$:unwrap .
token HX_EMBEDDED (*) ::= '«' (~['«','»'])* '»' .

// Meta-variables #SortN# can be used in hx syntax. 
meta[<HxSortParam>] ::=  '#<PRODUCTION_NAME>' ( (HX_DIGIT)* | '_' (HX_DIGIT | HX_UPPER | HX_LOWER)* ) '#' , '⦃', '⦄', '∥' .
inject[<HxEmbedded>] ::=  '%<PRODUCTION_NAME>', '', '' .


////////////////////////////////////////////////////////////////////////
%%%HXPREPRODUCTIONS%%%
////////////////////////////////////////////////////////////////////////


/// TERMS.

<HxTopTerm> ::= <HxTerm> .
<HxTerm> ::=
  <HxVariable>!!!:#v ( {Special}:hx {{#v}} HX_CONCRETE$$:unwrap:{n} | {VariableUse}:hx {{#v}} <HxAttributes>)
| <HxConstructor>:#C
  <HxRepeat>:#R
  ( {UnparsedSorted}:hx {{#C}} {{#R}} (HX_CONCRETE$:unwrap) <HxAttributes>
  | {MetaApplicationSorted}:hx {{#C}} {{#R}} <HxMetaVariable> ( HX_LBRACKET (<HxTerms> | {$Nil}) HX_RBRACKET | {$Nil} ) <HxAttributes>
  | {ConstructionSorted}:hx {{#C}} {{#R}} <HxConstructor> ( HX_LPAREN (<HxScopes> | {$Nil}) HX_RPAREN | {$Nil} ) <HxAttributes>
  | {VariableUseSorted}:hx {{#C}} {{#R}} <HxVariable>!!! <HxAttributes>
  | {LiteralSorted}:hx {{#C}} {{#R}} <HxLiteral> <HxAttributes>
  | {Construction}:hx {{#C}} ( HX_LPAREN (<HxScopes> | {$Nil}) HX_RPAREN | {$Nil} ) <HxAttributes>
  )
| {Literal}:hx <HxLiteral> <HxAttributes>
| {Unparsed}:hx (HX_CONCRETE$:unwrap) <HxAttributes>
| {MetaApplication}:hx <HxMetaVariable> ( HX_LBRACKET (<HxTerms> | {$Nil}) HX_RBRACKET | {$Nil} ) <HxAttributes>
.

<HxTopPattern> ::=
  <HxConstructor>:#C
  <HxRepeat>:#R
  ( {UnparsedSorted}:hx {{#C}} {{#R}} (HX_CONCRETE$:unwrap) <HxAttributes>
  | {ConstructionSorted}:hx {{#C}} {{#R}} <HxConstructor> ( HX_LPAREN (<HxScopes> | {$Nil}) HX_RPAREN | {$Nil} ) <HxAttributes>
  | {LiteralSorted}:hx {{#C}} {{#R}} <HxLiteral> <HxAttributes>
  | {Construction}:hx {{#C}} ( HX_LPAREN (<HxScopes> | {$Nil}) HX_RPAREN | {$Nil} ) <HxAttributes>
  )
| {Literal}:hx <HxLiteral> <HxAttributes>
| {Unparsed}:hx (HX_CONCRETE$:unwrap) <HxAttributes>
.

<HxScopes> ::= {$Cons} <HxScope> (HX_COMMA <HxScopes> | {$Nil}) .
<HxScope> ::= {Scope}:hx (HX_LBRACKET (<HxVariableList> | {$Nil}) HX_RBRACKET | {$Nil}) <HxTerm> .

<HxVariables> ::= {$Cons} <HxVariable>!!! <HxVariables> | {$Nil} .
<HxVariableList> ::= {$Cons} <HxVariable>!!! ( HX_COMMA <HxVariableList> | {$Nil} ) .

<HxTerms> ::= {$Cons} <HxTerm> (HX_COMMA <HxTerms> | {$Nil}) .

<HxAttributes> ::= ( {$Cons} <HxAttribute> <HxAttributes> | {$Nil} ).
<HxAttribute> ::= {Attribute}:hx <HxAttributeKind> <HxAttributeName> <HxAttributeValue> .

<HxAttributeValue> ::= 
  {AttributeValue}:hx HX_LPAREN <HxTerm> HX_RPAREN
| HX_LBRACE ( <HxTerm>:# ( {AttributeKeyValue}:hx {{#}} HX_COLON <HxTerm> HX_RBRACE
            | {AttributeKey}:hx {{#}} HX_RBRACE )
            | {AttributeNotKey}:hx HX_NOT <HxTerm> HX_RBRACE )
.

////////////////////////////////////////////////////////////////////////
%%%HXPOSTPRODUCTIONS%%%
////////////////////////////////////////////////////////////////////////
