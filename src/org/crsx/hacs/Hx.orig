// Hx.crs: SORTS OF HACS (.hx) FORMAT.
//
Hx[(

// STRUCTURE.

{$String : $StringEntrySort}
HxModule ::=(
  %hxModule⟪ %EmbeddedModule«HxEmbeddedModule» ⟫;
);

{$String : $StringEntrySort}
HxEmbeddedModule ::=(
  %hxEmbeddedModule⟪ module %ModuleName«$String» { %Declarations«$List[HxDeclaration]» } ⟫;
);

{$String : $StringEntrySort}
HxDeclaration ::=(
 %hxDeclaration⟪ %EmbeddedModule«HxEmbeddedModule» ; ⟫;
 %hxDeclaration⟪ import %ModuleName«$String» ( %SortNames«$List[$String]» ) ; ⟫;
 %hxDeclaration⟪ space %RegExp«$List[HxRegExpChoice]» ; ⟫;
 %hxDeclaration⟪ token %SortName«$String» | %RegExp«$List[HxRegExpChoice]» ; ⟫;
 %hxDeclaration⟪ fragment %FragmentName«$String» | %RegExp«$List[HxRegExpChoice]» ; ⟫;
 %hxDeclaration⟪ attribute %AttributeKind«HxAttributeKind» %AttributeName«$String» %AttributeForm«HxAttributeForm» %AttributeOptions«$List[HxAttributeOption]» ; ⟫;
 %hxDeclaration⟪ sort %SortName«$String» %Repeat«HxRepeat» %SortAbstraction«HxSortAbstraction» ; ⟫;
 %hxDeclaration⟪ text %SortAlternatives«$List[HxSortAlternative]» ; ⟫;
 %hxDeclaration⟪ %SortAlternatives«$List[HxSortAlternative]» ; ⟫;
 %hxDeclaration⟪ rule %Rule«HxRule» ; ⟫;
 %hxDeclaration⟪ { %Declarations«$List[HxDeclaration]» } ⟫;
);

//// SYNTAX.

{$String : $StringEntrySort}
HxRegExpChoice ::=(
 %hxRegExpChoice⟪ nested %RegExpSimple«HxRegExpSimple» %RegExpSimple«HxRegExpSimple» ⟫;
 %hxRegExpChoice⟪ %RegExpUnits«$List[HxRegExpUnit]» ⟫;
);

{$String : $StringEntrySort}
HxRegExpUnit ::= (
 %hxRegExpUnit⟪ %RegExpSimple«HxRegExpSimple» %Repeat«HxRepeat» ⟫;
);

{$String : $StringEntrySort}
HxRepeat ::=(
 %hxRepeat⟪ ⟫;
 %hxRepeat⟪ ? ⟫;
 %hxRepeat⟪ * ⟫;
 %hxRepeat⟪ + ⟫;
 %hxRepeat⟪ + _ %RegExpLeaf«HxRegExpSimple» ⟫;
);

{$String : $StringEntrySort}
HxRegExpSimple ::=(
 %hxRegExpSimple⟪ %String«$String» ⟫;
 %hxRegExpSimple⟪ %Word«$String» ⟫;
 %hxRegExpSimple⟪ %FragmentRef«$String» ⟫;
 %hxRegExpSimple⟪ %RegExpClass«HxRegExpClass» ⟫;
 %hxRegExpSimple⟪ . ⟫;
 %hxRegExpSimple⟪ ( %RegExp«$List[HxRegExpChoice]» ) ⟫;
);

{$String : $StringEntrySort}
HxRegExpClass ::=(
 HX-RegExpClassNot[HxRegExpClass];
 HX-RegExpClassChar[$String, HxRegExpClass];
 HX-RegExpClassRange[$String, $String, HxRegExpClass];
 HX-RegExpClassDone;
);

//// SORTS.

{$String : $StringEntrySort}
HxSortAbstraction ::=(
 %hxSortAbstraction⟪ a %SortAbstraction« {a:HxSortParam} HxSortAbstraction »  ⟫;
 %hxSortAbstraction⟪ %SortAlternatives«$List[HxSortAlternative]»  ⟫;
);

{$String : $StringEntrySort}
HxSortAlternative ::=(
 %hxSortAlternative⟪ | data %Form«HxForm» %Tagging« $List[$String] » ⟫;
 %hxSortAlternative⟪ | scheme %Form«HxForm» ⟫;
 %hxSortAlternative⟪ | ↑ %AttributeName«$String» ⟫;
 %hxSortAlternative⟪ | symbol %Form«HxForm» ⟫;
 %hxSortAlternative⟪ | static symbol %Form«HxForm» ⟫;
 %hxSortAlternative⟪ | sugar %Form«HxForm» → %Term«HxTerm» ⟫;
);

{$String : $StringEntrySort}
HxForm ::=(
 HX-FormParsedSorted[$String<!--SortName-->, HxParsedForm, $Numeric<!--Prec-->, $List[HxInheritedRef]];
 HX-FormParsed[HxParsedForm, $Numeric<!--Prec-->, $List[HxInheritedRef]];
 HX-FormConstruction[$String<!--Constructor-->, $List[HxScopeSort], $List[HxInheritedRef]];
);

{$String : $StringEntrySort}
HxScopeSort ::=(
 %hxScopeSort⟪ %Sort«HxSort» %Repeat«HxRepeat» [ %SubstituteSorts«$List[HxSubstituteSort]» ] ⟫;
 %hxScopeSort⟪ [ %Variable«$String» : %Sort«HxSort» ] ⟫;
 %hxBindersScopeSort⟪ [ %Variable«$String» : %Sort«HxSort» ] %BindersScopeSort« HxScopeSort » ⟫;
);

{$String : $StringEntrySort}
HxSubstituteSort ::=(
 %hxSubstituteSort⟪ %Variable«$String» : %Sort«HxSort» ⟫;
 %hxSubstituteSort⟪ %Variable«$String» ⟫;
 );

{$String : $StringEntrySort}
HxSort ::=(
 %hxSort⟪ %SimpleSort«HxSort» %SimpleSorts«$List[HxSort]» ⟫;
 %hxSimpleSort⟪ %SortName«$String» %MetaVariables«$List[$String]» ⟫;
 HX-SortParam[HxSort];
);

{$String : $StringEntrySort}
HxParsedForm ::=(
 HX-ParsedFormWord[$String, HxParsedForm];
 HX-ParsedFormTerm[HxScopeSortPrecRepeat, HxParsedForm];
 HX-ParsedFormSpace[$String, HxParsedForm];
 HX-ParsedFormDone;
);

{$String : $StringEntrySort}
HxScopeSortPrecRepeat ::=(
  %hxScopeSortPrecRepeat⟪ %ScopeSort«HxScopeSort» %FormPrec«$Numeric» %Repeat«HxRepeat» ⟫; 
);

{$String : $StringEntrySort}
HxAttributeKind ::=(
 %hxAttributeKind⟪ ↑ ⟫;
 %hxAttributeKind⟪ ↓ ⟫;
);

{$String : $StringEntrySort}
HxAttributeForm ::=(
 %hxAttributeForm⟪ ( %Sort«HxSort» ) ⟫;
 %hxAttributeForm⟪ { %Sort«HxSort» } ⟫;
 %hxAttributeForm⟪ { %Sort«HxSort» : %Sort«HxSort» } ⟫;
);

{$String : $StringEntrySort}
HxAttributeOption ::=(
 %hxAttributeOption⟪ %Variable«$String» %Constructor«$String» ⟫;
);

{$String : $StringEntrySort}
HxInheritedRef ::=(
 %hxInheritedRef⟪ ↓ %AttributeName«$String» ⟫;
);

//// RULES.

{$String : $StringEntrySort}
HxRule ::=(
 %hxRule⟪ %Priority«HxPriority» %Construction«HxTerm» : %Construction«HxTerm» → %Term«HxTerm» ⟫;
);

{$String : $StringEntrySort}
HxPriority ::=(
 %hxPriority⟪ priority ⟫;
 %hxPriority⟪ default ⟫;
 %hxPriority⟪ ⟫;
);

//// TERMS.

{$String : $StringEntrySort}
HxTerm ::=(

 %hxTerm⟪ %Constructor«$String» ( %Scopes«$List[HxScope]» ) %Attributes«$List[HxAttribute]» ⟫;
 %hxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %Constructor«$String» ( %Scopes«$List[HxScope]» ) %Attributes«$List[HxAttribute]» ⟫;
 %hxTerm⟪ %Literal«$String» %Attributes«$List[HxAttribute]» ⟫;
 %hxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %Literal«$String» %Attributes«$List[HxAttribute]» ⟫;

 %hxTerm⟪ %Variable«$String» %Attributes«$List[HxAttribute]» ⟫;
 %hxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %Variable«$String» %Attributes«$List[HxAttribute]» ⟫;

 %hxTerm⟪ %MetaVariable«$String» [ %Terms«$List[HxTerm]» ] %Attributes«$List[HxAttribute]» ⟫;
 %hxTerm⟪ %Constructor«$String» %Repeat«HxRepeat» %MetaVariable«$String» [ %Terms«$List[HxTerm]» ] %Attributes«$List[HxAttribute]» ⟫;
 
 HX-Unparsed[$String, $List[HxAttribute]] ;
 HX-UnparsedSorted[$String, HxRepeat, $String, $List[HxAttribute]];

 HX-Special[$String, Text]; //TODO: parameters in text
 HX-OMITTED;

);

{$String : $StringEntrySort}
HxScope ::=(
 %hxScope⟪ [ %VariableList«$List[$String]» ] %Term«HxTerm» ⟫;
);

{$String : $StringEntrySort}
HxAttribute ::=(
 %hxAttribute⟪ %AttributeKind«HxAttributeKind» %AttributeName«$String» %AttributeValue«HxAttributeValue» ⟫;
);

{$String : $StringEntrySort}
HxAttributeValue ::=(
 %hxAttributeValue⟪ ( %Term«HxTerm» ) ⟫;
 %hxAttributeValue⟪ { %Term«HxTerm» } ⟫;
 %hxAttributeValue⟪ { %Term«HxTerm» : %Term«HxTerm» } ⟫;
 %hxAttributeValue⟪ { ¬ %Term«HxTerm» } ⟫;
);

)]
